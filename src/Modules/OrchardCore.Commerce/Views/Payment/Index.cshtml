@using Money
@using OrchardCore.Commerce.Abstractions
@using OrchardCore.Commerce.Controllers
@using OrchardCore.Commerce.Extensions
@using OrchardCore.Commerce.ViewModels

@inject IShoppingCartPersistence ShoppingCartPersistence
@inject IPriceService PriceService
@inject IPriceSelectionStrategy  PriceSelectionStrategy

@model CardPaymentViewModel
@{
    // Shopping cart ID is null by default currently.
    var currentShoppingCart = await ShoppingCartPersistence.RetrieveAsync();

    var cartIsNotEmpty = currentShoppingCart.Count != 0;

    IEnumerable<Amount> totals;
    Amount defaultTotal = new();

    if (cartIsNotEmpty)
    {
        totals = await currentShoppingCart.CalculateTotalsAsync(PriceService, PriceSelectionStrategy);

        // We can only pay in one currency at a time. Later we have to figure out what to do if there are multiple
        // totals i.e., multiple currencies.
        defaultTotal = totals.FirstOrDefault();
    }
}

<script at="Foot" type="text/javascript" asp-src="https://js.stripe.com/v3/"></script>
<script at="Foot" type="text/javascript" asp-src="~/OrchardCore.Commerce/Scripts/stripe-card-form.js"></script>
<style asp-src="~/OrchardCore.Commerce/Styles/credit-card-form.css"></style>

<zone name="Header">
    <header class="masthead">
        <div class="container">
            <div class="intro-text">
                <div class="intro-lead-in"></div>
                <div class="intro-heading text-uppercase">@T["Checkout"]</div>
            </div>
        </div>
    </header>
</zone>
<section id="checkout">
    @if (cartIsNotEmpty)
    {
        <div class="row">
            <div class="col-12 mx-auto">
                <h1>@T["Orchard Core Commerce"]</h1>
                <h2>@T["Stripe Payment"]</h2>
            </div>
        </div>
        <div class="card-payment-form_containter">
            <form id="card-payment-form" class="card-payment-form" asp-controller="Payment" asp-action="Index" method="POST">
                <fieldset>
                    <div class="row">
                        <label for="card-payment-form_name">@T["Name"]</label>
                        <input id="card-payment-form_name" type="text" required>
                    </div>
                    <div class="row">
                        <label asp-for="Email">@T["Email"]</label>
                        <input asp-for="Email" type="email" required>
                    </div>
                    <div class="row">
                        <label for="card-payment-form_phone">@T["Phone"]</label>
                        <input id="card-payment-form_phone" type="tel" required>
                    </div>
                </fieldset>
                <fieldset>
                    <div class="row credit-card">
                        <div id="card-payment-form_card"></div>
                    </div>
                </fieldset>
                @Html.HiddenFor(model => model.Token, new { id = "hiddenToken" })
                <div class="pay-button-container">
                    <button type="submit" class="pay-button">@T["Pay"] @(defaultTotal.Currency.Symbol + defaultTotal.Value) </button>
                </div>
                <div class="error" role="alert">
                    <span class="error-message"></span>
                </div>
            </form>
        </div>
    }
    else
    {
        <p>@T["Your shopping cart is empty."]</p>
    }
</section>
